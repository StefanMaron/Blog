<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CleanCode on Stefan Maron blog</title>
    <link>https://stefanmaron.onrender.com/tags/cleancode/</link>
    <description>Recent content in CleanCode on Stefan Maron blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 02 Feb 2022 08:00:45 +0000</lastBuildDate><atom:link href="https://stefanmaron.onrender.com/tags/cleancode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bugfixes for LinterCop Rule LC0015</title>
      <link>https://stefanmaron.onrender.com/posts/bugfixes-for-lintercop-rule-lc0015/</link>
      <pubDate>Wed, 02 Feb 2022 08:00:45 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/bugfixes-for-lintercop-rule-lc0015/</guid>
      <description>I just released a new version for the BusinessCentral.LinterCop.
This rule is similar to the PTE0004 from Microsoft which checks for your tables to have a TableData permission set. All the other permissions are not covered.
After some discussion and some thoughts I ended up also including the check for TableData in LC0015. If you dont want to have a double check for this, you can disable PTE0004.
More details can be found in the dedicated docs side for this rule:</description>
    </item>
    
    <item>
      <title>How to takle all the challenges with BC SaaS?</title>
      <link>https://stefanmaron.onrender.com/posts/how-to-takle-all-the-challenges-with-bc-saas/</link>
      <pubDate>Thu, 30 Dec 2021 09:23:34 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/how-to-takle-all-the-challenges-with-bc-saas/</guid>
      <description>It&amp;rsquo;s been a while since my last blog post and this time its not about a technical topic. I have just watched the (right now) latest video from @SteveEndow and he asks a lot of questions and leaves open the answers. I just feel like I could share a few of my thoughts about some of those topics, related to Business Central. So if you did not watch the video already, you should watch it before continuing reading.</description>
    </item>
    
    <item>
      <title>Be careful with dynamic code</title>
      <link>https://stefanmaron.onrender.com/posts/be-careful-with-dynamic-code/</link>
      <pubDate>Wed, 11 Aug 2021 07:09:13 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/be-careful-with-dynamic-code/</guid>
      <description>I believe there is a time in every AL developers live where he discovers the power of RecordRef and FieldRef. It is surely Incredible what you can achieve with these tools and how fast you can deliver a pretty good working piece of code.
At least this is the way I remember my first solutions I build when I first learned about RecordRefs. I realized, the more I think about it the more code could be written with a dynamic approach and I started to deliver my finished code quite a bit faster.</description>
    </item>
    
    <item>
      <title>AL Lint v0.1.7: Code Metrics</title>
      <link>https://stefanmaron.onrender.com/posts/al-lint-v0-1-7-code-metrics/</link>
      <pubDate>Tue, 11 Aug 2020 06:09:23 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/al-lint-v0-1-7-code-metrics/</guid>
      <description>This morning I updated the code metrics calculation in AL Lint. Code metrics are meant to give you some comparable numbers on how complex your code is.
Why is this important information?
In general, if you install this extension, you aim for clean code. This is because code is written once but probably is read multiple times. And the easier it is to understand the more time you will save while reading your code.</description>
    </item>
    
    <item>
      <title>VS Code extension: AL Lint</title>
      <link>https://stefanmaron.onrender.com/posts/vs-code-extension-al-lint/</link>
      <pubDate>Sat, 08 Aug 2020 13:34:19 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/vs-code-extension-al-lint/</guid>
      <description>Maybe you have read this in twitter already: I took over the AL Lint extension for VS Code from Marije Brummel. She searched quite some time already for someone and finally she found me :D
For now I did two things on this extension for now.
 I worked myself a little bit into extension development for VS Code and did a little bit of refactoring, updated some dependencies to new versions and removed checks which are now covered by the AL Code Cops.</description>
    </item>
    
    <item>
      <title>Condition basics in AL</title>
      <link>https://stefanmaron.onrender.com/posts/condition-basics-in-al/</link>
      <pubDate>Tue, 04 Aug 2020 12:58:24 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/condition-basics-in-al/</guid>
      <description>Recently I posted a &amp;ldquo;Did you know that &amp;hellip;&amp;rdquo; post on Twitter showing an alternative way to write an if-condition. Today I thought: Hey, I might have some more examples for different ways to write conditions and here we are ;)
First start with the most simple if statement there is:
It just checks if the text variable is empty and if this is the case, some code is executed. Note that in AL the parentheses are not needed if you have only one condition or if you compare booleans.</description>
    </item>
    
  </channel>
</rss>
