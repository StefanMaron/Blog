<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Stefan Maron blog</title>
    <link>https://stefanmaron.onrender.com/</link>
    <description>Recent content on Stefan Maron blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Mar 2024 08:31:34 +0100</lastBuildDate><atom:link href="https://stefanmaron.onrender.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>BC Shortcuts Browser Extension</title>
      <link>https://stefanmaron.onrender.com/posts/bcshortcutsbrowserextension/</link>
      <pubDate>Tue, 05 Mar 2024 08:31:34 +0100</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/bcshortcutsbrowserextension/</guid>
      <description></description>
    </item>
    
    <item>
      <title>View changes of base permission sets</title>
      <link>https://stefanmaron.onrender.com/posts/viewchangesofbasepermissionsets/</link>
      <pubDate>Fri, 18 Aug 2023 13:57:36 +0200</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/viewchangesofbasepermissionsets/</guid>
      <description>How to check if one of the permissions sets from Microsoft change with an update So I got asked on LinedIn how you can keep track of changes in Microsoft&amp;rsquo;s code base for Business central. This is especially necessary when using the permission sets from Microsoft.
One of my tools you can use for this is the MSDyn365BC.Code.History repository on GitHub. But since this more a resource for Developers, and checking permission sets might not always be a task a developer gets assigned, I want to make sure to explain in detail, how everyone can review the changes Microsoft does to their permission sets.</description>
    </item>
    
    <item>
      <title>Open Source Projects in AL for Business Central</title>
      <link>https://stefanmaron.onrender.com/opensourcealprojects/</link>
      <pubDate>Thu, 06 Jul 2023 07:49:02 +0200</pubDate>
      
      <guid>https://stefanmaron.onrender.com/opensourcealprojects/</guid>
      <description>This is collection of all AL projects that are open source, either available on App Source or just on GitHub
Available on AppSource Spare Brained Licensing     
 by @SpareBrained and @JeremyVyska
 The Spare Brained Licensing app is a gatekeeper, a virtual bouncer. It is built on the idea that an Extension should have an active License Key, and provides the hooks for Extensions to check if the subscription license is active.</description>
    </item>
    
    <item>
      <title>My approach to custom APIs</title>
      <link>https://stefanmaron.onrender.com/posts/myapproachtocustomapi/</link>
      <pubDate>Tue, 04 Jul 2023 08:05:27 +0200</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/myapproachtocustomapi/</guid>
      <description>Since I work together with our colleagues from the PowerPlatform team more frequently, one of my most regular tasks is, to create a new custom API. The default APIs from Business central are cool, but if you really want to achieve something, you might get to their limits real fast.
So I have been exposing tables and writing APIs quite a lot recently, and my approach to this has changed a bit over time.</description>
    </item>
    
    <item>
      <title>Go Live Checklist</title>
      <link>https://stefanmaron.onrender.com/posts/golivechecklist/</link>
      <pubDate>Sat, 01 Jul 2023 00:33:39 +0200</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/golivechecklist/</guid>
      <description>I am not sure if you where on BCTechDays 2023, or if you maybe already saw Jeremy&amp;rsquo;s session on YouTube already.
If not, have a look, its worth your time:
  And from all the good stuff he talked about, I wanted to have a more detailed look at the GoLiveChecklist app he created. And since its all OpenSource, I just went to his github and checked it out.</description>
    </item>
    
    <item>
      <title>BC TechDays 2023</title>
      <link>https://stefanmaron.onrender.com/posts/bc-techdays-2023/</link>
      <pubDate>Fri, 23 Jun 2023 14:53:23 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/bc-techdays-2023/</guid>
      <description>And yet another conference has come to an end. And again its this weird feeling I can not really describe. All I know is, I am already looking forward to meeting all of the community again in France for EMEA later this year!
It was again an awesome conference for may reasons: Good sessions, good networking, meeting all the friends again, having valuable talk with all those experts on their specific field.</description>
    </item>
    
    <item>
      <title>My journey to Linux</title>
      <link>https://stefanmaron.onrender.com/posts/my-journey-to-linux/</link>
      <pubDate>Thu, 08 Jun 2023 19:46:33 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/my-journey-to-linux/</guid>
      <description>I do not exactly recall when that thought started to grow in the back of my mind, but I think I always were fascinated by linux. And I already created linux live USB sticks a couple of times. It not that difficult anymore as I recall it was someday. Maybe it never was and I just became more savvy with tech, who knows. But I never felt like this could be the operating system I would use for my daily work.</description>
    </item>
    
    <item>
      <title>Automatic Item Tracking</title>
      <link>https://stefanmaron.onrender.com/automatic-item-tracking/</link>
      <pubDate>Mon, 12 Dec 2022 05:46:26 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/automatic-item-tracking/</guid>
      <description>Automatic Item Tracking is an extension for Business Central that helps you with assigning new Lot Numbers automatically in Purchase documents.
The Setup is done on Item Tracking Code Card:
In the section Auto Assignment you can select on which documents the Lot Numbers should get pulled automatically from the number series.
This way, you can control for which Items the automation should be enabled.
And thats it, super easy!</description>
    </item>
    
    <item>
      <title>Business Central Clockify Integration</title>
      <link>https://stefanmaron.onrender.com/business-central-clockify-integration/</link>
      <pubDate>Thu, 02 Jun 2022 06:50:37 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/business-central-clockify-integration/</guid>
      <description>This extension helps you to load your data from Clockify to Business Central.
The Idea was, to build an integration to a simple and minimalistic time tracking tool and to use the data to quickly generate invoices for the times you have tracked.
Get an overview from your client list With the clockify client list you get an overview over estimates, tracked times and times that are already invoiced.
Just by a click in the outstanding estimate of 8.</description>
    </item>
    
    <item>
      <title>Stefan Maron Consulting – AppSource Privacy Policy</title>
      <link>https://stefanmaron.onrender.com/privacystatement/</link>
      <pubDate>Wed, 01 Jun 2022 12:17:36 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/privacystatement/</guid>
      <description>Privacy Policy for Stefan Maron Consulting
This Privacy Policy applies to our online activities and is valid for visitors to our website, as well as users of our AppSource products, with regards to the information that they shared and/or collect in Stefan Maron Consulting. This policy is not applicable to any information collected offline or via channels other than this website or AppSource related activities.
Consent
By using our website or AppSource Apps, you hereby consent to our Privacy Policy and agree to its terms.</description>
    </item>
    
    <item>
      <title>Stefan Maron Consulting – AppSource EULA</title>
      <link>https://stefanmaron.onrender.com/eula/</link>
      <pubDate>Wed, 01 Jun 2022 12:12:59 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/eula/</guid>
      <description>User Agreement
This User Agreement (“Agreement”) is a legal contract between you (“you” or “Customer”) and Stefan Maron Consulting from which you are procuring Offerings (defined below) and governs your use of Offerings purchased through Azure Marketplace and AppSource Marketplace (collectively, “Marketplace”).
This Agreement is the parties’ entire agreement on this subject and merges and supersedes all related prior and contemporaneous agreements. By agreeing to these terms, you represent and warrant that you have the authority to accept this Agreement, and you also agree to be bound by its terms.</description>
    </item>
    
    <item>
      <title>Bugfixes for LinterCop Rule LC0015</title>
      <link>https://stefanmaron.onrender.com/posts/bugfixes-for-lintercop-rule-lc0015/</link>
      <pubDate>Wed, 02 Feb 2022 08:00:45 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/bugfixes-for-lintercop-rule-lc0015/</guid>
      <description>I just released a new version for the BusinessCentral.LinterCop.
This rule is similar to the PTE0004 from Microsoft which checks for your tables to have a TableData permission set. All the other permissions are not covered.
After some discussion and some thoughts I ended up also including the check for TableData in LC0015. If you dont want to have a double check for this, you can disable PTE0004.
More details can be found in the dedicated docs side for this rule:</description>
    </item>
    
    <item>
      <title>Business Central LinterCop with older Versions of BC</title>
      <link>https://stefanmaron.onrender.com/posts/business-central-lintercop-with-older-versions-of-bc/</link>
      <pubDate>Tue, 11 Jan 2022 05:37:14 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/business-central-lintercop-with-older-versions-of-bc/</guid>
      <description>If you want to run pipelines with the LinterCop, you can use Run-ALPipeline and pass in the path to the LinterCop.dll via the parameter - CustomCops. But when running pipelines for various versions of BusinessCentral you might encounter errors like this:
Microsoft.Dynamics.Nav.CodeAnalysis, Version=8.2.8.24543, Culture=neutral, PublicKeyToken=31bf3856ad364e35&#39;(,): warning : An instance of analyzer http://BusinessCentral.LinterCop.Design.Rule0012DoNotUseObjectIdInSystemFunctions cannot be created from C:\Agent\LinterCop\BusinessCentral.LinterCop.dll : Could not load file or assembly &#39;Microsoft.Dynamics.Nav.CodeAnalysis, Version=8.2.8.24543, Culture=neutral, PublicKeyToken=31bf3856ad364e35&#39;. The system cannot find the file specified.</description>
    </item>
    
    <item>
      <title>Changes in MSDyn365BC.Code.History</title>
      <link>https://stefanmaron.onrender.com/posts/changes-in-msdyn365bc-code-history/</link>
      <pubDate>Fri, 07 Jan 2022 11:48:53 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/changes-in-msdyn365bc-code-history/</guid>
      <description>Today you may have already noticed something like this if you have a local clone of MSDyn365BC.Code.History to use with VS Code. I am going to explain what the hell is going on, and how to solve it ;)
The history was rewritten I had a couple of recommendations to improve this repository. That includes a .gitignore and some changes of the settings in the workspace files. But since this repo is a bit different compared to &amp;ldquo;normal&amp;rdquo; repos, its not that easy to just merge a pull request.</description>
    </item>
    
    <item>
      <title>BusinessCentral.LinterCop v0.23.0</title>
      <link>https://stefanmaron.onrender.com/posts/businesscentral-lintercop-v0-23-0/</link>
      <pubDate>Wed, 05 Jan 2022 07:10:45 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/businesscentral-lintercop-v0-23-0/</guid>
      <description>A new version of the BusinessCentral.LinterCop just got released 🥳
Special thanks to Rob van Bekkum @rvanbekkum who wrote two new rules!
Added Help links to wiki Microsoft already did this in the december release I think, and now the LinterCop also includes direct links to the wiki on GitHub.
Just by clicking for example on &amp;ldquo;LC0015&amp;rdquo; you can open the wiki page for this rule on the GitHub Repository https://github.</description>
    </item>
    
    <item>
      <title>How to takle all the challenges with BC SaaS?</title>
      <link>https://stefanmaron.onrender.com/posts/how-to-takle-all-the-challenges-with-bc-saas/</link>
      <pubDate>Thu, 30 Dec 2021 09:23:34 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/how-to-takle-all-the-challenges-with-bc-saas/</guid>
      <description>It&amp;rsquo;s been a while since my last blog post and this time its not about a technical topic. I have just watched the (right now) latest video from @SteveEndow and he asks a lot of questions and leaves open the answers. I just feel like I could share a few of my thoughts about some of those topics, related to Business Central. So if you did not watch the video already, you should watch it before continuing reading.</description>
    </item>
    
    <item>
      <title>Updates on my LinterCop project</title>
      <link>https://stefanmaron.onrender.com/posts/updates-on-my-lintercop-project/</link>
      <pubDate>Wed, 17 Nov 2021 06:20:47 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/updates-on-my-lintercop-project/</guid>
      <description>In the last days, I managed to get some new updates for you released. Since this would be too much for a tweet, I will summarize here what changed, what will change in the next days (hopefully 🙃 ), and what is planned for future updates.
What changed lately? Pipelines and automated builds The biggest change I did in the last weeks, was to introduce pipelines and automated builds on GitHub for the LinterCop.</description>
    </item>
    
    <item>
      <title>BusinessCentral.LinterCop goes VS Code!</title>
      <link>https://stefanmaron.onrender.com/posts/businesscentral-lintercop-goes-vs-code/</link>
      <pubDate>Tue, 21 Sep 2021 15:59:09 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/businesscentral-lintercop-goes-vs-code/</guid>
      <description>After quite some analyzing and reverse engineering, I got it working!
The custom code analyzer BusinessCentral.LinterCop is running included in VS Code.
And here is how to do it: First, go to my GitHub and download the latest binary here.
Then just place it on your hard drive, for example &amp;ldquo;C:\ALCustomCops\&amp;rdquo;
Then go to your settings file and insert it in the &amp;ldquo;al.codeAnalyzers&amp;rdquo; like this:
And thats it! Pretty short Blog but this should get you going ;)</description>
    </item>
    
    <item>
      <title>BusinessCentral.LinterCop</title>
      <link>https://stefanmaron.onrender.com/posts/businesscentral-lintercop/</link>
      <pubDate>Thu, 02 Sep 2021 08:13:42 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/businesscentral-lintercop/</guid>
      <description>As you maybe remember, I am working on a linter solution for AL for some time already. I tried a VS Code extension. I tried to build a dll to increase performance and to make it available in powershell and therefore also in pipelines. But for now I did not find a proper solution.
Recently I realized that the AL Compiler has a parameter &amp;ldquo;/analyzer:&amp;rdquo; and accepts a dll. And depending on wich cops you enable, the according ddls are just passed in.</description>
    </item>
    
    <item>
      <title>Be careful with dynamic code</title>
      <link>https://stefanmaron.onrender.com/posts/be-careful-with-dynamic-code/</link>
      <pubDate>Wed, 11 Aug 2021 07:09:13 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/be-careful-with-dynamic-code/</guid>
      <description>I believe there is a time in every AL developers live where he discovers the power of RecordRef and FieldRef. It is surely Incredible what you can achieve with these tools and how fast you can deliver a pretty good working piece of code.
At least this is the way I remember my first solutions I build when I first learned about RecordRefs. I realized, the more I think about it the more code could be written with a dynamic approach and I started to deliver my finished code quite a bit faster.</description>
    </item>
    
    <item>
      <title>MSDyn365BC.Code.History got a few updates!</title>
      <link>https://stefanmaron.onrender.com/posts/msdyn365bc-code-history-got-a-few-updates/</link>
      <pubDate>Wed, 23 Jun 2021 06:00:06 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/msdyn365bc-code-history-got-a-few-updates/</guid>
      <description>Over the last few month a collected a few requests to improve or change the MSDyn365BC.Code.History repository. Last weekend I finally managed to address them and since Sunday I rebuild the whole Repository. Today its finally going live:
https://github.com/StefanMaron/MSDyn365BC.Code.History
Include Translation files Since today, (hopefully) all translation files are included. I never did this but in case you need to, you can now compare them. For performance reasons they are excluded from search in all the workspaces that are part of the repository tho.</description>
    </item>
    
    <item>
      <title>Validate a commit before it is committed</title>
      <link>https://stefanmaron.onrender.com/posts/validate-a-commit-before-it-is-committed/</link>
      <pubDate>Thu, 10 Jun 2021 14:20:29 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/validate-a-commit-before-it-is-committed/</guid>
      <description>Recently there was this question about how to do version numbering when working with AL Apps and automatic builds:
It started a discussion about when to update which part of the version number and how that is done. The discussion will be continued today (10th June 2021 9pm CEST) on Discord if you are interested to join/listen:
waldo on Twitter: &amp;ldquo;For whomever is interested - this Thursday, 9pm CEST, we&amp;rsquo;ll have a discussion on this topic (handling app versions) on the #msdyn365bc discord: https://t.</description>
    </item>
    
    <item>
      <title>Upgrade a BC CRONUS Database using Docker</title>
      <link>https://stefanmaron.onrender.com/posts/upgrade-a-bc-cronos-database-using-docker/</link>
      <pubDate>Fri, 04 Jun 2021 09:00:33 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/upgrade-a-bc-cronos-database-using-docker/</guid>
      <description>A few days ago I streamed how I try to upgrade a Business Central CRONOS Database just using docker:
https://youtu.be/2UnIFAWgEK0
Apart from a few throwbacks it went quite well, but better watch yourself ;)
However, I promised to publish the script I created so you don&amp;rsquo;t need to write it down from the video.
https://gist.github.com/StefanMaron/17fd977dd7192e4a713012db91889cf5
Have Fun ;)</description>
    </item>
    
    <item>
      <title>Code review: Loop over an Enum</title>
      <link>https://stefanmaron.onrender.com/posts/code-review-loop-over-an-enum/</link>
      <pubDate>Mon, 19 Apr 2021 09:57:13 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/code-review-loop-over-an-enum/</guid>
      <description>So I came across this post from ThatNavGuy: Looping Through Enum – That NAV guy (wordpress.com)
He shows an example on how to loop over an enum. The goal is to have the enum pointing to the next value on each iteration.
Since this community is about sharing knowledge and learning from each other, I wanted to make a quick code review and show, how I would solve this task ;)</description>
    </item>
    
    <item>
      <title>Speed up BC container creation</title>
      <link>https://stefanmaron.onrender.com/posts/speed-up-bc-container-creation/</link>
      <pubDate>Tue, 16 Mar 2021 19:46:00 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/speed-up-bc-container-creation/</guid>
      <description>This is probably going to be a short blog again and chances are high that you already know what I am going to share. But if your are like me and did not know this little trick, its going to save you, and maybe your team, quite some time!
Since I do not run my pipelines on DevOps but on GitLab I am quite happy to use the Run-ALPipeLine command. When you supply the -imageName parameter it behaves the same way like New-BCContainer does.</description>
    </item>
    
    <item>
      <title>Clean up after yourself, Git!</title>
      <link>https://stefanmaron.onrender.com/posts/clean-up-after-yourself-git/</link>
      <pubDate>Wed, 10 Mar 2021 07:00:30 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/clean-up-after-yourself-git/</guid>
      <description>You may know this problem: After a while working with feature branches your local git repository is a mess of many branches which don&amp;rsquo;t event exist anymore on your remote. (GitHub/GitLab/DevOps)
You could delete these local branches manually but if you are as lazy as I am, you might want to read on and just take my solution for this ;)
I wrote a short function in PowerShell which cleans up branches for me:</description>
    </item>
    
    <item>
      <title>Performance &amp;amp; Variables exposed as field on a Page</title>
      <link>https://stefanmaron.onrender.com/posts/performance-variables-exposed-as-field-on-a-page/</link>
      <pubDate>Tue, 02 Mar 2021 19:01:27 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/performance-variables-exposed-as-field-on-a-page/</guid>
      <description>Today was again one of those days&amp;hellip;
I just wanted to add a flow field to a table to look up some value, and display it on a list page. After some time I realized that this wont work. Im my case I needed to go three table relations deep to get out the value I needed. But just chaining two FlowFields would already be enough to see this mission failing.</description>
    </item>
    
    <item>
      <title>Video series: How do I?</title>
      <link>https://stefanmaron.onrender.com/posts/video-series-how-do-i/</link>
      <pubDate>Sun, 28 Feb 2021 08:54:16 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/video-series-how-do-i/</guid>
      <description>I just joined the hype train and started to record AL learning videos!
Yes, I know what you might think now.
&amp;ldquo;Again? There are already enough people doing the same videos over and over again!&amp;rdquo;
But I have something different in mind. In this series of videos I want to share and show how I o stuff in AL. And maybe explain why I do it like this. My goal is to create videos as short as possible and focus only on a simple single task per video.</description>
    </item>
    
    <item>
      <title>Can I copy my container?</title>
      <link>https://stefanmaron.onrender.com/posts/can-i-copy-my-container/</link>
      <pubDate>Tue, 23 Feb 2021 05:58:14 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/can-i-copy-my-container/</guid>
      <description>I just stumbled over this twitter post from Steve
And I asked myself the same question already some time ago. And guess what, this is super easy ;)
Stop and Commit the container you want to copy You first need to stop your container you want to copy. If it is running of course ;)
Stop-BcContainer &amp;lt;ContainerToCopy&amp;gt; This should not take too long.
After that you can use the &amp;ldquo;Docker commit&amp;rdquo; command to save the current state of this container to a new image.</description>
    </item>
    
    <item>
      <title>Thoughts about automated testing in projects</title>
      <link>https://stefanmaron.onrender.com/posts/thoughts-about-automated-testing-in-projects/</link>
      <pubDate>Mon, 01 Feb 2021 09:34:04 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/thoughts-about-automated-testing-in-projects/</guid>
      <description>I just finished a somewhat successful project with one of my customers, starting with BC from scratch only with some master data imported. For some more critical processes I wrote some basic test cases and automated them. Although this project did not fail and the customer can work with BC without problems now, I had a feeling of just being lucky.
I mean, I know what I am capable of and I was confident to do this project from the beginning.</description>
    </item>
    
    <item>
      <title>MSDyn365BC.Code.History</title>
      <link>https://stefanmaron.onrender.com/posts/msdyn365bc-code-history/</link>
      <pubDate>Wed, 13 Jan 2021 16:28:03 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/msdyn365bc-code-history/</guid>
      <description>Did you ever wonder what was changed in a cumulative update in Business Central? Sure, you can read the update notes from Microsoft and read the list of bug fixes they made. But I mean like, really know what was changed. Like, which line was changed on the customer table from between 2 versions?
Well, I did. For my own code I can always go to the repository and see all the code history.</description>
    </item>
    
    <item>
      <title>In VS Code you want to git stage manually...</title>
      <link>https://stefanmaron.onrender.com/posts/in-vs-code-you-want-to-stage-manually/</link>
      <pubDate>Mon, 09 Nov 2020 15:34:55 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/in-vs-code-you-want-to-stage-manually/</guid>
      <description>After a longer break with blogging, I am now back with a really short one. But I thought this would be worth sharing ;)
Thanks to @waldo1001 and @KarolakNatalie who opened my eyes on this one :)
You might know this little message, although you might have already forgotten that you got asked, when you fist started working with VS Code.
It seems like this can really save some time and work.</description>
    </item>
    
    <item>
      <title>Automated export objects from C/AL</title>
      <link>https://stefanmaron.onrender.com/posts/automated-export-objects-from-c-al/</link>
      <pubDate>Mon, 07 Sep 2020 05:44:17 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/automated-export-objects-from-c-al/</guid>
      <description>This time I have some tips on how to use GIT integration when developing in C/AL with docker. When used to AL development one of the first things to notice when going back to C/AL is, that you do not have any version control.
To solve this problem, I added a little bit of SQL code to the [Object] table as SQL Trigger. This trigger exports each edited object as TXT file to specified folder.</description>
    </item>
    
    <item>
      <title>Business Central and Multiline Fields</title>
      <link>https://stefanmaron.onrender.com/posts/business-central-and-multiline-fields/</link>
      <pubDate>Thu, 20 Aug 2020 05:07:52 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/business-central-and-multiline-fields/</guid>
      <description>This topic is probably as old as the RTC client. If you want to display a text field on a Page you will try for around two hours and then you will give up and maybe build a control addin to solve this.
In the web client this problem was not solved by now. We have fields with length up to 2048 but we are not able to display this.</description>
    </item>
    
    <item>
      <title>AL Lint v0.1.7: Code Metrics</title>
      <link>https://stefanmaron.onrender.com/posts/al-lint-v0-1-7-code-metrics/</link>
      <pubDate>Tue, 11 Aug 2020 06:09:23 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/al-lint-v0-1-7-code-metrics/</guid>
      <description>This morning I updated the code metrics calculation in AL Lint. Code metrics are meant to give you some comparable numbers on how complex your code is.
Why is this important information?
In general, if you install this extension, you aim for clean code. This is because code is written once but probably is read multiple times. And the easier it is to understand the more time you will save while reading your code.</description>
    </item>
    
    <item>
      <title>VS Code extension: AL Lint</title>
      <link>https://stefanmaron.onrender.com/posts/vs-code-extension-al-lint/</link>
      <pubDate>Sat, 08 Aug 2020 13:34:19 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/vs-code-extension-al-lint/</guid>
      <description>Maybe you have read this in twitter already: I took over the AL Lint extension for VS Code from Marije Brummel. She searched quite some time already for someone and finally she found me :D
For now I did two things on this extension for now.
 I worked myself a little bit into extension development for VS Code and did a little bit of refactoring, updated some dependencies to new versions and removed checks which are now covered by the AL Code Cops.</description>
    </item>
    
    <item>
      <title>Condition basics in AL</title>
      <link>https://stefanmaron.onrender.com/posts/condition-basics-in-al/</link>
      <pubDate>Tue, 04 Aug 2020 12:58:24 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/condition-basics-in-al/</guid>
      <description>Recently I posted a &amp;ldquo;Did you know that &amp;hellip;&amp;rdquo; post on Twitter showing an alternative way to write an if-condition. Today I thought: Hey, I might have some more examples for different ways to write conditions and here we are ;)
First start with the most simple if statement there is:
It just checks if the text variable is empty and if this is the case, some code is executed. Note that in AL the parentheses are not needed if you have only one condition or if you compare booleans.</description>
    </item>
    
    <item>
      <title>Coding4Performance 5: FindSet vs FindFirst</title>
      <link>https://stefanmaron.onrender.com/posts/coding4performance-5-findset-vs-findfirst/</link>
      <pubDate>Thu, 23 Jul 2020 06:26:19 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/coding4performance-5-findset-vs-findfirst/</guid>
      <description>Today in coding for performance, we talk a bit about FindSet and FindFirst. I actually had plans to make this one the first post in this series. But it turned out that the differences between this two commands are not as obvious as I first thought.
Let me first place a huge disclaimer here: Everything I test and explain here is done with Business Central version 16. It might be that earlier versions of BC and NAV behaved differently.</description>
    </item>
    
    <item>
      <title>Coding4Performance 4: Task Scheduler</title>
      <link>https://stefanmaron.onrender.com/posts/coding4performance-4-task-scheduler/</link>
      <pubDate>Wed, 15 Jul 2020 09:13:05 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/coding4performance-4-task-scheduler/</guid>
      <description>In my last post about Start Session I explained how you can easily run a Codeunit in background and relieve the user session. The downside on this method is, that your background task still runs on the same server instance like the user session does. If you have only a few users and only one server instance you are good to go. But if not, then the Task Scheduler could be of interest for you!</description>
    </item>
    
    <item>
      <title>Coding4Performance 3: Start Session</title>
      <link>https://stefanmaron.onrender.com/posts/coding4performance-3-start-session/</link>
      <pubDate>Sat, 11 Jul 2020 07:48:15 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/coding4performance-3-start-session/</guid>
      <description>As promised, here the first (and easiest) way to run code in background. This blog will be a bit shorter, as Start session is quite straight forward. Note: If you did not read the previous blog about Background tasks in general, maybe you should start there ;)
I created an example scenario for which a background task could be useful. Maybe you want your customers to be correctly set up before anyone is able to post any invoice or shipment for them.</description>
    </item>
    
    <item>
      <title>Coding4Performance 2: Asynchronous development and background tasks</title>
      <link>https://stefanmaron.onrender.com/posts/coding4performance-2-asynchronous-development-and-background-tasks/</link>
      <pubDate>Fri, 10 Jul 2020 07:52:14 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/coding4performance-2-asynchronous-development-and-background-tasks/</guid>
      <description>In this post I will explain the general concept of asynchronous development and background tasks.
So everyone knows how procedural development works. In Business Central it starts with a user which logs in to the web client and starts a user session. The first page which opens is most likely the role center page. Behind the scenes now every part runs some code and loads some data. Typically this happens from top to bottom.</description>
    </item>
    
    <item>
      <title>Coding4Performance 1: Text Builder</title>
      <link>https://stefanmaron.onrender.com/posts/coding4perfomance-1-text-builder/</link>
      <pubDate>Mon, 06 Jul 2020 08:04:47 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/coding4perfomance-1-text-builder/</guid>
      <description>As NAV and Business Central evolves user tasks become more complex and BC becomes more powerful to solve this tasks. But this happens often with cost in performance. Even Microsoft published a (very good) article about how to improve performance in BC.
I do mainly concentrate on the developer aspect of this article and in this post especially on the TextBuilder Data Type.
So it is described that working with this Datatype instead of gluing strings with += together is much more efficient.</description>
    </item>
    
    <item>
      <title>How to: Fix problems with Docker DNS resolution</title>
      <link>https://stefanmaron.onrender.com/posts/how-to-fix-problems-with-docker-dns-resolution/</link>
      <pubDate>Sat, 04 Jul 2020 17:53:29 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/posts/how-to-fix-problems-with-docker-dns-resolution/</guid>
      <description>Recently I discovered that my BC instance within a Docker container somehow can not access the internet. After some time I figured that the problem was the DNS resolution and I thought I might share two possible ways to resolve this problem with you!
How to check if you have the same problem You can check this by yourself if you enter you BC Container. (Note: You need to have the navcontainerhelper module installed)</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://stefanmaron.onrender.com/about/</link>
      <pubDate>Mon, 29 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://stefanmaron.onrender.com/about/</guid>
      <description>My name is Stefan Maroń and I am a passionate Dynamics Business Central developer. Dynamics NAV and Business Central is part of my life for around four years by now. I was always interested in connecting the NAV world to the outside world, building interfaces, migrating data and similar topics.
I’m also interested in understanding what is going on under the hood of NAV and Business Central.
I hope you enjoy reading what I have to say!</description>
    </item>
    
  </channel>
</rss>
